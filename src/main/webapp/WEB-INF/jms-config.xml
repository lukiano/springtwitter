<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd">


    <amq:broker id="twBroker" useJmx="true" brokerName="twBroker" persistent="true" useShutdownHook="true">
        <amq:destinationPolicy>
            <amq:policyMap>
                <amq:policyEntries>
                    <amq:policyEntry topic=">" producerFlowControl="true" memoryLimit="1mb">
                        <amq:pendingSubscriberPolicy>
                            <amq:vmCursor />
                        </amq:pendingSubscriberPolicy>
                    </amq:policyEntry>
                    <amq:policyEntry queue=">" producerFlowControl="true" memoryLimit="1mb">
                        <amq:pendingQueuePolicy>
                            <amq:vmQueueCursor/>
                        </amq:pendingQueuePolicy>
                    </amq:policyEntry>
                </amq:policyEntries>
            </amq:policyMap>
        </amq:destinationPolicy>
        <amq:managementContext>
            <amq:managementContext createConnector="true" connectorPort="2011" />
        </amq:managementContext>
        <amq:networkConnectors>
            <amq:networkConnector uri="multicast://default?group=23"/>
        </amq:networkConnectors>
        <amq:persistenceAdapter>
            <amq:kahaDB directory="/Users/luciano/workspace3/springtwitter/activemq-${broker.port}-data" journalMaxFileLength="32mb"/>
        </amq:persistenceAdapter>
        <amq:transportConnectors>
            <amq:transportConnector uri="tcp://localhost:${broker.port}" discoveryUri="multicast://default?group=23" />
        </amq:transportConnectors>
    </amq:broker>

    <!--  ActiveMQ destinations to use  -->
    <!--
    <amq:queue id="destination" physicalName="org.apache.activemq.spring.Test.spring.embedded"/>
     -->
    <!--
	<bean id="connectionFactory" class="bitronix.tm.resource.jms.PoolingConnectionFactory" init-method="init" destroy-method="close" depends-on="twBroker">
        <property name="className" value="org.apache.activemq.ActiveMQXAConnectionFactory" />
        <property name="uniqueName" value="DA_BROKER" />
        <property name="maxPoolSize" value="3" />
        <property name="driverProperties">
            <props>
                <prop key="brokerURL">tcp://localhost:${broker.port}</prop>
            </props>
        </property>
    </bean>
    -->
    <bean id="xaJmsFactory"
          class="org.apache.activemq.ActiveMQXAConnectionFactory" depends-on="twBroker">
        <property name="brokerURL" value="tcp://localhost:${broker.port}"/>
    </bean>

    <bean id="connectionFactory"
          class="com.atomikos.jms.AtomikosConnectionFactoryBean"
          init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="DATOPIC_BROKER"/>
        <property name="xaConnectionFactory" ref="xaJmsFactory"/>
        <property name="maxPoolSize" value="10" />
        <property name="minPoolSize" value="5" />
    </bean>

    <bean id="connectionFactoryJNDI" class="com.lucho.util.JNDIExporter" depends-on="connectionFactory">
        <constructor-arg index="0" ref="connectionFactory" />
        <constructor-arg index="1" value="connectionFactory" />
    </bean>

    <!--
         Where do we send updated time table info to?
         Note: this is a topic to allow multiple subscribers.
    -->
    <bean id="daTopic" class="org.apache.activemq.command.ActiveMQTopic">
        <property name="physicalName" value="DATOPIC" />
    </bean>

<!--
    These beans should only be active in a clustered Hibernate Search environment. 
 -->
 <!--
    <bean id="searchQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <property name="physicalName" value="SEARCHQUEUE" />
    </bean>
    
    <bean id="searchQueueJNDI" class="com.lucho.util.JNDIExporter" depends-on="searchQueue">
        <constructor-arg index="0" ref="searchQueue" />
        <constructor-arg index="1" value="searchQueue" />
    </bean>
  
	<bean id="hibernateSearchController" class="com.lucho.util.JMSHibernateSearchController" />
	
    <bean id="hibernateSearchMessageListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer"
          depends-on="transactionManager">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="messageListener" ref="hibernateSearchController"/>
        <property name="destinationName" value="SEARCHQUEUE"/>
        <property name="pubSubDomain" value="false" />
        <property name="concurrentConsumers" value="1"/>
        <property name="receiveTimeout" value="3000"/>
        <property name="sessionTransacted" value="true"/>
    </bean>
     -->
     
    <!--
      JMS template for easy sending of update messages with Spring.
      Used by Spring Integration because SI does not have a direct way to set sessionTransacted attribute.
    -->
    <bean id="jmsTemplate"
          class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="defaultDestination" ref="daTopic" />
        <property name="receiveTimeout" value="1000"/>
        <property name="pubSubDomain" value="true" />
        <property name="sessionTransacted" value="true" />
    </bean>

</beans>