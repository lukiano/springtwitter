<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core.xsd">


    <amq:broker id="twBroker" useJmx="false" persistent="false" useShutdownHook="false">
        <amq:transportConnectors>
            <amq:transportConnector uri="vm://localhost"/>
        </amq:transportConnectors>
    </amq:broker>

    <!--  ActiveMQ destinations to use  -->
    <!--
    <amq:queue id="destination" physicalName="org.apache.activemq.spring.Test.spring.embedded"/>
     -->

    <bean id="xaFactory"
          class="org.apache.activemq.ActiveMQXAConnectionFactory" depends-on="twBroker">
        <property name="brokerURL" value="vm://localhost"/>
    </bean>

    <!--
         Configure the JMS connector;
         call init to register for recovery!
    -->
    <bean id="connectionFactory"
          class="com.atomikos.jms.AtomikosConnectionFactoryBean"
          init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="DATOPIC_BROKER"/>
        <property name="xaConnectionFactory" ref="xaFactory"/>
    </bean>

    <!--
         Where do we send updated time table info to?
         Note: this is a topic to allow multiple subscribers.
    -->
    <bean id="topic" class="org.apache.activemq.command.ActiveMQTopic">
        <property name="physicalName" value="DATOPIC" />
    </bean>


    <bean id="messageListener" class="com.lucho.service.TwitterMessageListener"/>

    <!--
         a kind of message listener pool that will listen to
         messages posted to 'DATOPIC' with 3 threads,
         each one consuming a connection from bean 'ConnectionFactory'
    -->
    <bean id="messageListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer"
          depends-on="atomikosTransactionManager">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="messageListener" ref="messageListener"/>
        <property name="destinationName" value="DATOPIC"/>
        <property name="concurrentConsumers" value="1"/>
        <property name="receiveTimeout" value="3000"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <!--
      JMS template for easy sending of timetable update messages with Spring
    -->
    <bean id="jmsTemplate"
          class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="defaultDestination" ref="topic" />
        <property name="receiveTimeout" value="1000"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

</beans>