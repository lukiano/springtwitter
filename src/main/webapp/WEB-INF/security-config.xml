<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.lucho.security" />

	<sec:http auto-config="false"  entry-point-ref="basicEntryPoint" >
		<sec:intercept-url pattern="/"
			access="ROLE_ANONYMOUS,ROLE_USER" />
		<sec:intercept-url pattern="/signup" access="ROLE_ANONYMOUS" />
		<sec:intercept-url pattern="/t/**" access="ROLE_USER" />
        <!--
		<sec:intercept-url pattern="/oauth/authorize"
			access="ROLE_USER" />
	    -->
		<sec:logout logout-url="/logout" logout-success-url="/" />
		<sec:custom-filter position="CONCURRENT_SESSION_FILTER"
			ref="concurrencyFilter" />
		<sec:custom-filter position="FORM_LOGIN_FILTER"
			ref="userNameAndPasswordAuthFilter" />
		<sec:custom-filter position="BASIC_AUTH_FILTER" ref="basicAuthFilter" />
		<sec:custom-filter position="REMEMBER_ME_FILTER"
			ref="rememberMeFilter" />
        <!--
		<sec:custom-filter ref="oauth2ProviderFilter"
			after="EXCEPTION_TRANSLATION_FILTER" />
		-->
		<sec:session-management
			session-authentication-strategy-ref="sessionAuthenticationStrategy" />
	</sec:http>

	<sec:global-method-security
		secured-annotations="enabled" mode="aspectj" />

	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider ref="rememberMeAuthenticationProvider" />
		<sec:authentication-provider ref="authenticationProvider" />
		<!-- <sec:authentication-provider ref="adAuthenticationProvider" />  -->
	</sec:authentication-manager>

	<bean id="authenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsServiceImpl" />
		<property name="userCache" ref="userCache" />
		<property name="passwordEncoder" ref="cryptoPasswordEncoder" />
	</bean>

	<bean id="userCache"
		class="org.springframework.security.core.userdetails.cache.NullUserCache" />

	<bean id="concurrencyFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<constructor-arg index="0" ref="sessionRegistry" />
		<constructor-arg index="1" value="/session-expired.htm" />
	</bean>

	<bean id="userNameAndPasswordAuthFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<property name="sessionAuthenticationStrategy" ref="sessionAuthenticationStrategy" />
		<property name="rememberMeServices" ref="rememberMeServices" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="filterProcessesUrl" value="/spring_security_login" />
		<property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
		<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
	</bean>

	<bean id="authenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/t/home" />
		<property name="alwaysUseDefaultTargetUrl" value="true" />
	</bean>

	<bean id="authenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/login?login_error=1" />
		<property name="redirectStrategy" ref="redirectStrategy" />
	</bean>

	<bean id="redirectStrategy" class="com.lucho.util.UsernameRedirectStrategy" />

	<bean id="sessionAuthenticationStrategy"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<constructor-arg ref="sessionRegistry" />
		<property name="maximumSessions" value="1" />
	</bean>

	<bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />

	<bean id="rememberMeFilter"
		class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<constructor-arg index="0" ref="authenticationManager" />
		<constructor-arg index="1" ref="rememberMeServices" />
	</bean>

	<bean id="rememberMeServices"
		class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
		<constructor-arg index="0" value="someRembemberMeKey" />
		<constructor-arg index="1" ref="userDetailsServiceImpl" />
		<constructor-arg index="2" ref="tokenRepository" />
	</bean>

	<bean id="tokenRepository"
		class="org.springframework.security.web.authentication.rememberme.InMemoryTokenRepositoryImpl" />

	<bean id="rememberMeAuthenticationProvider"
		class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<constructor-arg value="someRembemberMeKey" />
	</bean>
	
	<bean id="basicAuthFilter"
  		class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
  		<constructor-arg ref="authenticationManager"/>
  		<constructor-arg ref="basicEntryPoint"/>
	</bean>

	<bean id="basicEntryPoint"
		class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
		<property name="realmName" value="springTwitter" />
	</bean>

	<bean id="cryptoPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg index="0">
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
				<bean class="org.springframework.security.access.annotation.Jsr250Voter" />
			</list>
		</constructor-arg>
	</bean>

    <!--
	<bean id="clientDetailsService" class="com.lucho.util.TempInMemoryClientDetailsService">
	</bean>

	<bean id="userApprovalHandler"
		class="org.springframework.security.oauth2.provider.approval.TokenServicesUserApprovalHandler">
		<property name="tokenServices" ref="oauth2TokenServices" />
	</bean>

	<bean id="oauth2TokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="clientDetailsService" ref="clientDetailsService" />
		<property name="tokenStore" ref="tokenStore" />
	</bean>

	<bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore">
	</bean>

	<bean id="authorizationCodeServices"
		class="org.springframework.security.oauth2.provider.code.InMemoryAuthorizationCodeServices">
	</bean>

	<oauth:resource-server id="oauth2ProviderFilter"
		token-services-ref="oauth2TokenServices" />
	-->

<!-- 
	<bean id="adAuthenticationProvider"
		class="org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider">
		<constructor-arg value="casa" />
		<constructor-arg value="ldap://localhost/" />
	</bean>
 -->
 
 	<bean id="requestContextFilter" class="org.springframework.web.filter.RequestContextFilter" />
</beans>