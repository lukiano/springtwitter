<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <bean id="placeholderConfig"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:application.properties"/>
    </bean>

    <util:properties id="jdbcConfiguration" location="classpath:jdbcdatasource.properties"/>

    <!-- configure an Atomikos JTA-aware datasource -->
    <bean id="datasource"
          class="com.atomikos.jdbc.AtomikosDataSourceBean"
          init-method="init" destroy-method="close">
        <!-- set an arbitrary but unique name for the datasource -->
        <property name="uniqueResourceName" value="XADBMS" />
        <property name="maxPoolSize" value="50"/>
        <property name="minPoolSize" value="5"/>
        <!--
             set the underlying driver class to use,
             in this example case we use Oracle
        -->
        <property name="xaDataSourceClassName" value="${datasource.classname}"/>
        <property name="xaProperties" ref="jdbcConfiguration" />

        <!-- how many connections in the pool? -->
        <property name="poolSize" value="3"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

        <!--
             IMPORTANT: make sure to refer to an ATOMIKOS
             JTA/XA datasource for the sessionFactory!
        -->
        <property name="dataSource" ref="datasource" />
        <property name="packagesToScan">
            <list>
                <value>com.lucho.domain</value>
            </list>
        </property>
        <!-- IMPORTANT: make sure to tell Hibernate to use JTA -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <!-- <prop key="hibernate.connection.isolation">3</prop>    -->
                <prop key="hibernate.current_session_context_class">jta</prop>
                <prop key="hibernate.id.new_generator_mappings">true</prop>
                <!-- 
                <prop key="hibernate.transaction.factory_class">
                    com.atomikos.icatch.jta.hibernate3.AtomikosJTATransactionFactory
                </prop>
                <prop key="hibernate.transaction.manager_lookup_class">
                    com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup
                </prop>
                 -->
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.cache.region.factory_class">
                    org.hibernate.cache.infinispan.InfinispanRegionFactory
                </prop>
                <prop key="hibernate.cache.infinispan.entity.eviction.strategy">LRU</prop>
                <prop key="hibernate.cache.infinispan.entity.eviction.wake_up_interval">2000</prop>
                <prop key="hibernate.cache.infinispan.entity.eviction.max_entries">5000</prop>
                <prop key="hibernate.cache.infinispan.entity.expiration.lifespan">60000</prop>
                <prop key="hibernate.cache.infinispan.entity.expiration.max_idle">30000</prop>

                <prop key="hibernate.search.default.directory_provider">infinispan</prop>
                <prop key="hibernate.search.default.data_cachename">data_l</prop>
                <prop key="hibernate.search.default.metadata_cachename">metadata_l</prop>
            </props>
        </property>

    </bean>

</beans>